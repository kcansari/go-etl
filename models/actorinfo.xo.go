package models

// Code generated by xo. DO NOT EDIT.

import (
	"database/sql"
)

// SELECT a.actor_id,     a.first_name,     a.last_name,     group_concat(DISTINCT (((c.name)::text || ': '::text) || ( SELECT group_concat((f.title)::text) AS group_concat            FROM ((film f              JOIN film_category fc_1 ON ((f.film_id = fc_1.film_id)))              JOIN film_actor fa_1 ON ((f.film_id = fa_1.film_id)))           WHERE ((fc_1.category_id = c.category_id) AND (fa_1.actor_id = a.actor_id))           GROUP BY fa_1.actor_id))) AS film_info    FROM (((actor a      LEFT JOIN film_actor fa ON ((a.actor_id = fa.actor_id)))      LEFT JOIN film_category fc ON ((fa.film_id = fc.film_id)))      LEFT JOIN category c ON ((fc.category_id = c.category_id)))   GROUP BY a.actor_id, a.first_name, a.last_name;
type ActorInfo struct {
	ActorID   sql.NullInt64  `json:"actor_id"`   // actor_id
	FirstName sql.NullString `json:"first_name"` // first_name
	LastName  sql.NullString `json:"last_name"`  // last_name
	FilmInfo  sql.NullString `json:"film_info"`  // film_info
}
